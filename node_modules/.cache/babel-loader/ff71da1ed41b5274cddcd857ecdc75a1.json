{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst useDataFetching = dataSource => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await fetch(dataSource);\n        const result = await data.json();\n\n        if (result) {\n          setData(Result);\n          setLoading(false);\n        }\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n\n    fetchData();\n  }, [dataSource]);\n};\n\n_s(useDataFetching, \"SpbtMwdIiqvAJkBilBIq4dWmP2M=\");\n\nexport default useDataFetching;","map":{"version":3,"sources":["/home/oniact/Documents/reactPROJECTS/project-board/src/hooks/useDataFetching.js"],"names":["React","useState","useEffect","useDataFetching","dataSource","loading","setLoading","data","setData","error","setError","fetchData","fetch","result","json","Result","e","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,eAAe,GAAIC,UAAD,IAAgB;AAAA;;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,mBAAeS,SAAf,GAA2B;AAEvB,UAAI;AACA,cAAMJ,IAAI,GAAG,MAAMK,KAAK,CAACR,UAAD,CAAxB;AAEA,cAAMS,MAAM,GAAG,MAAMN,IAAI,CAACO,IAAL,EAArB;;AAEA,YAAID,MAAJ,EAAY;AACRL,UAAAA,OAAO,CAACO,MAAD,CAAP;AACAT,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,OATD,CASE,OAAOU,CAAP,EAAU;AAERV,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEAI,QAAAA,QAAQ,CAACM,CAAC,CAACC,OAAH,CAAR;AACH;AACJ;;AAEDN,IAAAA,SAAS;AACZ,GAtBQ,EAsBN,CAACP,UAAD,CAtBM,CAAT;AAuBH,CA7BD;;GAAMD,e;;AA+BN,eAAeA,eAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nconst useDataFetching = (dataSource) => {\n\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [error, setError] = useState(\"\");\n  \n    useEffect(() => {\n\n        async function fetchData() {\n\n            try {\n                const data = await fetch(dataSource);\n\n                const result = await data.json();\n\n                if (result) {\n                    setData(Result);\n                    setLoading(false);\n                }\n            } catch (e) {\n\n                setLoading(false);\n\n                setError(e.message);\n            } \n        }\n\n        fetchData();\n    }, [dataSource])\n}\n\nexport default useDataFetching"]},"metadata":{},"sourceType":"module"}