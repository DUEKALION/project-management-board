{"ast":null,"code":"var _jsxFileName = \"/home/oniact/Documents/reactPROJECTS/project-board/src/pages/Board/Board.js\",\n    _s = $RefreshSig$();\n\n// import { useState, useEffect} from 'react';\nimport useDataFetching from '../../hooks/useDataFetching';\nimport Lane from '../../components/Lane/Lane';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lanes = [{\n  id: 1,\n  title: 'To Do'\n}, {\n  id: 2,\n  title: 'In Progress'\n}, {\n  id: 3,\n  title: 'Review'\n}, {\n  id: 4,\n  title: 'Done'\n}];\n\nfunction Board() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const tasks = await fetch(`https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/tasks`);\n        const result = await tasks.json();\n\n        if (result) {\n          setTasks(result);\n          setLoading(false);\n        }\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board-wrapper\",\n    children: lanes.map(lane => /*#__PURE__*/_jsxDEV(Lane, {\n      title: lane.title,\n      loading: loading,\n      error: error,\n      tasks: tasks.filter(task => task.lane === lane.id)\n    }, lane.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"91QJWSKHH+PDHRAIk6rrHPljIH8=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/oniact/Documents/reactPROJECTS/project-board/src/pages/Board/Board.js"],"names":["useDataFetching","Lane","lanes","id","title","Board","loading","setLoading","useState","tasks","setTasks","error","setError","useEffect","fetchData","fetch","result","json","e","message","map","lane","filter","task"],"mappings":";;;AAAA;AACA,OAAOA,eAAP,MAA4B,6BAA5B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADY,EAEZ;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFY,EAGZ;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHY,EAIZ;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAJY,CAAd;;AAOA,SAASC,KAAT,GAAiB;AAAA;;AAEf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAGAK,EAAAA,SAAS,CAAC,MAAM;AAEd,mBAAeC,SAAf,GAA2B;AAEzB,UAAI;AAEF,cAAML,KAAK,GAAG,MAAMM,KAAK,CAEtB,yFAFsB,CAAzB;AAKA,cAAMC,MAAM,GAAG,MAAMP,KAAK,CAACQ,IAAN,EAArB;;AAEA,YAAID,MAAJ,EAAY;AAEVN,UAAAA,QAAQ,CAACM,MAAD,CAAR;AAEAT,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OAfD,CAeE,OAAOW,CAAP,EAAU;AAEVX,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEAK,QAAAA,QAAQ,CAACM,CAAC,CAACC,OAAH,CAAR;AACD;AACF;;AAEDL,IAAAA,SAAS;AACV,GA5BQ,EA4BN,EA5BM,CAAT;AA6BA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGZ,KAAK,CAACkB,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAEA,MAAA,KAAK,EAAEA,IAAI,CAACjB,KAFZ;AAGA,MAAA,OAAO,EAAEE,OAHT;AAIA,MAAA,KAAK,EAAEK,KAJP;AAKA,MAAA,KAAK,EAAEF,KAAK,CAACa,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,IAAL,KAAcA,IAAI,CAAClB,EAA1C;AALP,OACKkB,IAAI,CAAClB,EADV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAnDQE,K;;KAAAA,K;AAqDT,eAAeA,KAAf","sourcesContent":["// import { useState, useEffect} from 'react';\nimport useDataFetching from '../../hooks/useDataFetching';\nimport Lane from '../../components/Lane/Lane';\nimport './Board.css';\n\nconst lanes = [\n  { id: 1, title: 'To Do' },\n  { id: 2, title: 'In Progress' },\n  { id: 3, title: 'Review' },\n  { id: 4, title: 'Done' },\n];\n\nfunction Board() {\n\n  const [loading, setLoading] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  const [error, setError] = useState('');\n\n\n  useEffect(() => {\n\n    async function fetchData() {\n\n      try {\n\n        const tasks = await fetch(\n\n          `https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/tasks`,\n        );\n\n        const result = await tasks.json();\n\n        if (result) {\n\n          setTasks(result);\n\n          setLoading(false);\n        }\n      } catch (e) {\n\n        setLoading(false);\n\n        setError(e.message);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return (\n    <div className='Board-wrapper'>\n      {lanes.map((lane) => (\n        <Lane \n        key={lane.id} \n        title={lane.title}\n        loading={loading}\n        error={error}\n        tasks={tasks.filter((task) => task.lane === lane.id)} \n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}